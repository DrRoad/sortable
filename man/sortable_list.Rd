% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sortable_list.R
\name{sortable_list}
\alias{sortable_list}
\title{Create a sortable item list.}
\usage{
sortable_list(output_id, labels, selector = NULL,
  class = "list-group-item", options = sortable_options())
}
\arguments{
\item{output_id}{output variable to read the plot/image from.}

\item{labels}{A character vector with the text to display inside the widget.}

\item{selector}{This is the css id to use, and must be unique in your shiny
app. If NULL, the function generates a selector of the form
\code{sortable_list_id_1}, and will automatically increment for every
\code{sortable_list}.}

\item{class}{The css class to use}

\item{options}{Options to be supplied to Sortable. See \link{sortable_options} for more details}
}
\description{
Creates a sortable item list using the \code{sortable.js} framework, and generates
an \code{htmlwidgets} element.  The elements of this list can be dragged and
dropped in any order.  Typically you will embed a \code{sortable_list} inside a
Shiny app or any shiny runtime, e.g. a \code{learnr} tutorial.
}
\details{
The widget automatically updates a Shiny output, with the matching \code{output_id}
}
\examples{
if (require(htmltools)) {

  list_group_css <- "
  .list-group-item {
    position: relative;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
    background-color: #fff;
      border: 1px solid #ddd;
  }"

  html_print(
    tagList(
      tags$style(list_group_css),
      tags$p("You can drag and drop these list items:"),
      sortable_list("example_2", labels = c("one", "two", "three"))
    )
  )
}
}
\seealso{
\link{sortable}
}
